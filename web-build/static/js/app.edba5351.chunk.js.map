{"version":3,"sources":["src/PlayScreen.js","App.js","web-build/register-service-worker.js","src/signs/rock.png","src/signs/scissors.png","src/signs/paper.png"],"names":["rock","require","scissors","paper","bgColors","randomImg","Math","floor","random","styles","StyleSheet","create","container","alignItems","justifyContent","flex","counter","fontSize","color","sign","width","height","button","position","bottom","PlayScreen","useState","setCounter","useEffect","timer","setTimeout","prv","clearTimeout","View","style","compose","backgroundColor","Image","source","Button","onPress","title","Text","App","play","setPlay","header","marginBottom","marginTop","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"kMAGMA,EAAOC,EAAQ,IACfC,EAAWD,EAAQ,IACnBE,EAAQF,EAAQ,IAEhBG,EAAW,CAAC,UAAW,UAAW,WAElCC,EAAY,WAGhB,MAFe,CAACL,EAAMG,EAAOD,GACdI,KAAKC,MAAsB,EAAhBD,KAAKE,YAGjCH,IACA,IAkCMI,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,WAAY,SACZC,eAAgB,SAChBC,KAAM,GAERC,QAAS,CACPC,SAAU,IACVC,MAAO,SAETC,KAAM,CACJC,MAAO,IACPC,OAAQ,KAEVC,OAAQ,CACNC,SAAU,WACVC,OAAQ,MAIGC,EAtDI,WAAO,IAAD,EACOC,mBAAS,GADhB,WAChBV,EADgB,KACPW,EADO,KAavB,OAXAC,qBAAU,WACR,GAAgB,IAAZZ,EAAJ,CAEA,IAAMa,EAAQC,YAAW,WACvBH,GAAW,SAACI,GAAD,OAASA,EAAM,OACzB,KAEH,OAAO,WACLC,aAAaH,OAEd,CAACb,IAEF,kBAACiB,EAAA,EAAD,CACEC,MAAOxB,IAAWyB,QAChB,CAAEC,gBAAiBhC,EAASY,EAAU,IACtCP,EAAOG,YAGI,IAAZI,EACC,oCACE,kBAACqB,EAAA,EAAD,CAAOH,MAAOzB,EAAOU,KAAMmB,OAAQjC,MACnC,kBAAC4B,EAAA,EAAD,CAAMC,MAAOzB,EAAOa,QAClB,kBAACiB,EAAA,EAAD,CAAQC,QAAS,kBAAMb,EAAW,IAAIc,MAAM,iBAIhD,kBAACC,EAAA,EAAD,CAAMR,MAAOzB,EAAOO,SAAUA,KCvCvB,SAAS2B,IAAO,IAAD,EACJjB,oBAAS,GADL,WACrBkB,EADqB,KACfC,EADe,KAE5B,OAAOD,EACL,kBAAC,EAAD,MAEA,kBAACX,EAAA,EAAD,CAAMC,MAAOzB,EAAOG,WAClB,kBAAC8B,EAAA,EAAD,CAAMR,MAAOzB,EAAOqC,QAApB,uBACA,kBAACJ,EAAA,EAAD,CAAMR,MAAO,CAAEjB,SAAU,KAAzB,wBACA,kBAACgB,EAAA,EAAD,CAAMC,MAAOzB,EAAOa,QAClB,kBAACiB,EAAA,EAAD,CAAQE,MAAM,OAAOD,QAAS,kBAAMK,GAAQ,QAMpD,IAAMpC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTG,KAAM,EACNqB,gBAAiB,OACjBvB,WAAY,SACZC,eAAgB,UAElBgC,OAAQ,CACN7B,SAAU,GACV8B,aAAc,IAEhBzB,OAAQ,CACN0B,UAAW,GACX5B,MAAO,Q,4DC9BP,kBAAmB6B,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,U,mBCV1DE,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/app.edba5351.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, Button, Image } from \"react-native\";\r\n\r\nconst rock = require(\"./signs/rock.png\");\r\nconst scissors = require(\"./signs/scissors.png\");\r\nconst paper = require(\"./signs/paper.png\");\r\n\r\nconst bgColors = [\"#16a085\", \"#9b59b6\", \"#3498db\"];\r\n\r\nconst randomImg = () => {\r\n  const emojis = [rock, paper, scissors];\r\n  const random = Math.floor(Math.random() * 3);\r\n  return emojis[random];\r\n};\r\nrandomImg();\r\nconst PlayScreen = () => {\r\n  const [counter, setCounter] = useState(3);\r\n  useEffect(() => {\r\n    if (counter === 0) return;\r\n\r\n    const timer = setTimeout(() => {\r\n      setCounter((prv) => prv - 1);\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [counter]);\r\n  return (\r\n    <View\r\n      style={StyleSheet.compose(\r\n        { backgroundColor: bgColors[counter - 1] },\r\n        styles.container\r\n      )}\r\n    >\r\n      {counter === 0 ? (\r\n        <>\r\n          <Image style={styles.sign} source={randomImg()} />\r\n          <View style={styles.button}>\r\n            <Button onPress={() => setCounter(3)} title=\"Play Again\" />\r\n          </View>\r\n        </>\r\n      ) : (\r\n        <Text style={styles.counter}>{counter}</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n  },\r\n  counter: {\r\n    fontSize: 120,\r\n    color: \"white\",\r\n  },\r\n  sign: {\r\n    width: 200,\r\n    height: 200,\r\n  },\r\n  button: {\r\n    position: \"absolute\",\r\n    bottom: 40,\r\n  },\r\n});\r\n\r\nexport default PlayScreen;\r\n","import React, { useState } from \"react\";\nimport { StyleSheet, Text, View, Button } from \"react-native\";\nimport PlayScreen from \"./src/PlayScreen\";\n\nexport default function App() {\n  const [play, setPlay] = useState(false);\n  return play ? (\n    <PlayScreen />\n  ) : (\n    <View style={styles.container}>\n      <Text style={styles.header}>Rock Paper Scissors</Text>\n      <Text style={{ fontSize: 65 }}>✊ ✋ ✌</Text>\n      <View style={styles.button}>\n        <Button title=\"Play\" onPress={() => setPlay(true)} />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  header: {\n    fontSize: 30,\n    marginBottom: 10,\n  },\n  button: {\n    marginTop: 30,\n    width: 250,\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/rock.864b5a2a.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.48d238a6.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.cffb3100.png\";"],"sourceRoot":""}